directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
directive @auth on FIELD_DEFINITION
directive @hasRole(roles: [CustomerRole!]) on FIELD_DEFINITION

input RegisterInput {
  name: String!
  phoneNumber: String!
  email: String!
  licenseID: String!
  address: String!
  membershipNumber: Int
  password: String!
}

input UpdateCustomerInput {
  name: String
  phoneNumber: String
  email: String
  licenseID: String
  address: String
  membershipNumber: Int
}

input LoginInput{
  email:String!
  password:String!
}

input ChangePasswordInput{
  oldPassword:String!
  newPassword:String!
  confirmPassword:String!
}

"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Customer implements Node {
  id: ID!
  name: String!
  phoneNumber: String!
  email: String!
  licenseID: String!
  address: String!
  membershipNumber: Int!
  role: CustomerRole!
}
"""CustomerRole is enum for the field role"""
enum CustomerRole @goModel(model: "customer/ent/customer.Role") {
  SUBSCRIBER
  ADMIN
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "customer/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

#Token
type JWT{
  token: String!
  tokenType: String!
}
type Query {
  customers: [Customer!]!
}

type Mutation{
  Register(input: RegisterInput!):JWT!
  Login(input: LoginInput!):JWT!
  Update(id:ID! , input: UpdateCustomerInput!):Customer! @auth @hasRole(roles:SUBSCRIBER)
  ChangePassword(id:ID! ,input: ChangePasswordInput!):String! @auth @hasRole(roles:SUBSCRIBER)
  UpdateRole(id:ID!,input:CustomerRole!):Customer! @auth @hasRole(roles:ADMIN)
}
"""The builtin Time type"""
scalar Time

