// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.8
// source: proto/flight/flight.proto

package flight

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryFlightInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To         string                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	DepartDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=depart_date,json=departDate,proto3" json:"depart_date,omitempty"`
	ReturnDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=return_date,json=returnDate,proto3" json:"return_date,omitempty"`
	Size       int32                  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Page       int32                  `protobuf:"varint,12,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *QueryFlightInput) Reset() {
	*x = QueryFlightInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_flight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFlightInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFlightInput) ProtoMessage() {}

func (x *QueryFlightInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_flight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFlightInput.ProtoReflect.Descriptor instead.
func (*QueryFlightInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_flight_proto_rawDescGZIP(), []int{0}
}

func (x *QueryFlightInput) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *QueryFlightInput) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *QueryFlightInput) GetDepartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartDate
	}
	return nil
}

func (x *QueryFlightInput) GetReturnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReturnDate
	}
	return nil
}

func (x *QueryFlightInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryFlightInput) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type Flight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	From           string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To             string                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	DepartDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=depart_date,json=departDate,proto3" json:"depart_date,omitempty"`
	ReturnDate     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=return_date,json=returnDate,proto3" json:"return_date,omitempty"`
	DepartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=depart_time,json=departTime,proto3" json:"depart_time,omitempty"`
	Status         string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	AvailableSlots int32                  `protobuf:"varint,8,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"`
	FlightPlane    string                 `protobuf:"bytes,9,opt,name=flight_plane,json=flightPlane,proto3" json:"flight_plane,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Flight) Reset() {
	*x = Flight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_flight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flight) ProtoMessage() {}

func (x *Flight) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_flight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flight.ProtoReflect.Descriptor instead.
func (*Flight) Descriptor() ([]byte, []int) {
	return file_proto_flight_flight_proto_rawDescGZIP(), []int{1}
}

func (x *Flight) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Flight) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flight) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Flight) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Flight) GetDepartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartDate
	}
	return nil
}

func (x *Flight) GetReturnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReturnDate
	}
	return nil
}

func (x *Flight) GetDepartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartTime
	}
	return nil
}

func (x *Flight) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Flight) GetAvailableSlots() int32 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

func (x *Flight) GetFlightPlane() string {
	if x != nil {
		return x.FlightPlane
	}
	return ""
}

func (x *Flight) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Flight) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateFlightInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	From           string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To             string                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	DepartDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=depart_date,json=departDate,proto3" json:"depart_date,omitempty"`
	DepartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=depart_time,json=departTime,proto3" json:"depart_time,omitempty"`
	ReturnDate     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=return_date,json=returnDate,proto3" json:"return_date,omitempty"`
	Status         string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	AvailableSlots int32                  `protobuf:"varint,8,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"`
	FlightPlane    string                 `protobuf:"bytes,9,opt,name=flight_plane,json=flightPlane,proto3" json:"flight_plane,omitempty"`
}

func (x *CreateFlightInput) Reset() {
	*x = CreateFlightInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_flight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlightInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlightInput) ProtoMessage() {}

func (x *CreateFlightInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_flight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlightInput.ProtoReflect.Descriptor instead.
func (*CreateFlightInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_flight_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFlightInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFlightInput) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreateFlightInput) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreateFlightInput) GetDepartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartDate
	}
	return nil
}

func (x *CreateFlightInput) GetDepartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartTime
	}
	return nil
}

func (x *CreateFlightInput) GetReturnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReturnDate
	}
	return nil
}

func (x *CreateFlightInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateFlightInput) GetAvailableSlots() int32 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

func (x *CreateFlightInput) GetFlightPlane() string {
	if x != nil {
		return x.FlightPlane
	}
	return ""
}

type UpdateFlightInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	From           string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To             string                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	DepartDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=depart_date,json=departDate,proto3" json:"depart_date,omitempty"`
	DepartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=depart_time,json=departTime,proto3" json:"depart_time,omitempty"`
	ReturnDate     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=return_date,json=returnDate,proto3" json:"return_date,omitempty"`
	Status         string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	AvailableSlots int32                  `protobuf:"varint,8,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"`
	FlightPlane    string                 `protobuf:"bytes,9,opt,name=flight_plane,json=flightPlane,proto3" json:"flight_plane,omitempty"`
}

func (x *UpdateFlightInput) Reset() {
	*x = UpdateFlightInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_flight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlightInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlightInput) ProtoMessage() {}

func (x *UpdateFlightInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_flight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlightInput.ProtoReflect.Descriptor instead.
func (*UpdateFlightInput) Descriptor() ([]byte, []int) {
	return file_proto_flight_flight_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateFlightInput) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFlightInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFlightInput) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *UpdateFlightInput) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *UpdateFlightInput) GetDepartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartDate
	}
	return nil
}

func (x *UpdateFlightInput) GetDepartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartTime
	}
	return nil
}

func (x *UpdateFlightInput) GetReturnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReturnDate
	}
	return nil
}

func (x *UpdateFlightInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateFlightInput) GetAvailableSlots() int32 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

func (x *UpdateFlightInput) GetFlightPlane() string {
	if x != nil {
		return x.FlightPlane
	}
	return ""
}

type SearchFlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flights      []*Flight `protobuf:"bytes,1,rep,name=flights,proto3" json:"flights,omitempty"`
	Size         int32     `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Page         int32     `protobuf:"varint,12,opt,name=page,proto3" json:"page,omitempty"`
	TotalPages   int32     `protobuf:"varint,13,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
	TotalRecords int32     `protobuf:"varint,14,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
}

func (x *SearchFlightResponse) Reset() {
	*x = SearchFlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_flight_flight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFlightResponse) ProtoMessage() {}

func (x *SearchFlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flight_flight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFlightResponse.ProtoReflect.Descriptor instead.
func (*SearchFlightResponse) Descriptor() ([]byte, []int) {
	return file_proto_flight_flight_proto_rawDescGZIP(), []int{4}
}

func (x *SearchFlightResponse) GetFlights() []*Flight {
	if x != nil {
		return x.Flights
	}
	return nil
}

func (x *SearchFlightResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchFlightResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFlightResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *SearchFlightResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

var File_proto_flight_flight_proto protoreflect.FileDescriptor

var file_proto_flight_flight_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x3b, 0x0a, 0x0b,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xe1,
	0x03, 0x0a, 0x06, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xe6, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a,
	0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x22, 0xf6, 0x02, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x07, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x07, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x32, 0xc8, 0x01, 0x0a, 0x0d, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0d,
	0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x37, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x2e,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0d, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20, 0x5a,
	0x1e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_flight_flight_proto_rawDescOnce sync.Once
	file_proto_flight_flight_proto_rawDescData = file_proto_flight_flight_proto_rawDesc
)

func file_proto_flight_flight_proto_rawDescGZIP() []byte {
	file_proto_flight_flight_proto_rawDescOnce.Do(func() {
		file_proto_flight_flight_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_flight_flight_proto_rawDescData)
	})
	return file_proto_flight_flight_proto_rawDescData
}

var file_proto_flight_flight_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_flight_flight_proto_goTypes = []interface{}{
	(*QueryFlightInput)(nil),      // 0: entpb.QueryFlightInput
	(*Flight)(nil),                // 1: entpb.Flight
	(*CreateFlightInput)(nil),     // 2: entpb.CreateFlightInput
	(*UpdateFlightInput)(nil),     // 3: entpb.UpdateFlightInput
	(*SearchFlightResponse)(nil),  // 4: entpb.SearchFlightResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_proto_flight_flight_proto_depIdxs = []int32{
	5,  // 0: entpb.QueryFlightInput.depart_date:type_name -> google.protobuf.Timestamp
	5,  // 1: entpb.QueryFlightInput.return_date:type_name -> google.protobuf.Timestamp
	5,  // 2: entpb.Flight.depart_date:type_name -> google.protobuf.Timestamp
	5,  // 3: entpb.Flight.return_date:type_name -> google.protobuf.Timestamp
	5,  // 4: entpb.Flight.depart_time:type_name -> google.protobuf.Timestamp
	5,  // 5: entpb.Flight.created_at:type_name -> google.protobuf.Timestamp
	5,  // 6: entpb.Flight.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 7: entpb.CreateFlightInput.depart_date:type_name -> google.protobuf.Timestamp
	5,  // 8: entpb.CreateFlightInput.depart_time:type_name -> google.protobuf.Timestamp
	5,  // 9: entpb.CreateFlightInput.return_date:type_name -> google.protobuf.Timestamp
	5,  // 10: entpb.UpdateFlightInput.depart_date:type_name -> google.protobuf.Timestamp
	5,  // 11: entpb.UpdateFlightInput.depart_time:type_name -> google.protobuf.Timestamp
	5,  // 12: entpb.UpdateFlightInput.return_date:type_name -> google.protobuf.Timestamp
	1,  // 13: entpb.SearchFlightResponse.flights:type_name -> entpb.Flight
	2,  // 14: entpb.FlightService.CreateFlight:input_type -> entpb.CreateFlightInput
	3,  // 15: entpb.FlightService.UpdateFlight:input_type -> entpb.UpdateFlightInput
	0,  // 16: entpb.FlightService.SearchFlights:input_type -> entpb.QueryFlightInput
	1,  // 17: entpb.FlightService.CreateFlight:output_type -> entpb.Flight
	1,  // 18: entpb.FlightService.UpdateFlight:output_type -> entpb.Flight
	4,  // 19: entpb.FlightService.SearchFlights:output_type -> entpb.SearchFlightResponse
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_flight_flight_proto_init() }
func file_proto_flight_flight_proto_init() {
	if File_proto_flight_flight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_flight_flight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFlightInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_flight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_flight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlightInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_flight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlightInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_flight_flight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_flight_flight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_flight_flight_proto_goTypes,
		DependencyIndexes: file_proto_flight_flight_proto_depIdxs,
		MessageInfos:      file_proto_flight_flight_proto_msgTypes,
	}.Build()
	File_proto_flight_flight_proto = out.File
	file_proto_flight_flight_proto_rawDesc = nil
	file_proto_flight_flight_proto_goTypes = nil
	file_proto_flight_flight_proto_depIdxs = nil
}
