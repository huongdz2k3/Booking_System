// Code generated by ent, DO NOT EDIT.

package ent

import (
	"booking/ent/booking"
	"booking/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bookingFields := schema.Booking{}.Fields()
	_ = bookingFields
	// bookingDescBookingCode is the schema descriptor for booking_code field.
	bookingDescBookingCode := bookingFields[0].Descriptor()
	// booking.BookingCodeValidator is a validator for the "booking_code" field. It is called by the builders before save.
	booking.BookingCodeValidator = bookingDescBookingCode.Validators[0].(func(string) error)
	// bookingDescCreatedAt is the schema descriptor for created_at field.
	bookingDescCreatedAt := bookingFields[3].Descriptor()
	// booking.DefaultCreatedAt holds the default value on creation for the created_at field.
	booking.DefaultCreatedAt = bookingDescCreatedAt.Default.(time.Time)
	// bookingDescUpdatedAt is the schema descriptor for updated_at field.
	bookingDescUpdatedAt := bookingFields[4].Descriptor()
	// booking.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	booking.DefaultUpdatedAt = bookingDescUpdatedAt.Default.(time.Time)
	// bookingDescFlightID is the schema descriptor for flight_id field.
	bookingDescFlightID := bookingFields[5].Descriptor()
	// booking.FlightIDValidator is a validator for the "flight_id" field. It is called by the builders before save.
	booking.FlightIDValidator = bookingDescFlightID.Validators[0].(func(int) error)
	// bookingDescCustomerID is the schema descriptor for customer_id field.
	bookingDescCustomerID := bookingFields[6].Descriptor()
	// booking.CustomerIDValidator is a validator for the "customer_id" field. It is called by the builders before save.
	booking.CustomerIDValidator = bookingDescCustomerID.Validators[0].(func(int) error)
}
